/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-08 07:29:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.javalex.ex.Session.SessionUtil;
import com.javalex.ex.DAO.MemberDAO;
import com.javalex.ex.DTO.MemberDTO;
import java.util.ArrayList;

public final class myPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.javalex.ex.Session.SessionUtil");
    _jspx_imports_classes.add("com.javalex.ex.DTO.MemberDTO");
    _jspx_imports_classes.add("com.javalex.ex.DAO.MemberDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<!-- basic -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<!-- mobile metas -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=1\">\r\n");
      out.write("<!-- site metas -->\r\n");
      out.write("<title>My page</title>\r\n");
      out.write("<meta name=\"keywords\" content=\"\">\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta name=\"author\" content=\"\">\r\n");
      out.write("<!-- bootstrap css -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("<!-- style css -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\">\r\n");
      out.write("<!-- Responsive-->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/responsive.css\">\r\n");
      out.write("<!-- fevicon -->\r\n");
      out.write("<link rel=\"icon\" href=\"images/fevicon.png\" type=\"image/gif\" />\r\n");
      out.write("<!-- Scrollbar Custom CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/jquery.mCustomScrollbar.min.css\">\r\n");
      out.write("<!-- Tweaks for older IEs-->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css\">\r\n");
      out.write("<!-- owl stylesheets -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/owl.carousel.min.css\">\r\n");
      out.write("<link rel=\"stylesoeet\" href=\"css/owl.theme.default.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.css\"\r\n");
      out.write("	media=\"screen\">\r\n");
      out.write("<style>\r\n");
      out.write(".form_group {\r\n");
      out.write("	font-family: 'G마켓 산스 Medium';\r\n");
      out.write("	max-width: 510px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	border: 1px solid #ddd;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	margin-top: 150px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label {\r\n");
      out.write("	display: block;\r\n");
      out.write("	margin-bottom: 5px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"text\"] {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	margin-bottom: 30px;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"] {\r\n");
      out.write("	background-color: #007bff;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	padding: 10px 15px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 3px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	top: -85px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"button\"]:hover, input[type=\"submit\"]:hover, input[type=\"reset\"]:hover\r\n");
      out.write("	{\r\n");
      out.write("	background-color: #28d0ff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form_group .text-right {\r\n");
      out.write("	text-align: right;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form_group .btn-danger {\r\n");
      out.write("	background-color: #dc3545;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	border: none;\r\n");
      out.write("	padding: 10px 15px;\r\n");
      out.write("	border-radius: 3px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form_group .btn-danger:hover {\r\n");
      out.write("	background-color: #c82333;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- header section start-->\r\n");
      out.write("	<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("		<a class=\"logo\" href=\"index.jsp\"><img src=\"images/klogo.jpg\"></a>\r\n");
      out.write("		<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n");
      out.write("			data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\r\n");
      out.write("			aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("			<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("		</button>\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("			<ul class=\"navbar-nav\">\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"index.jsp\">홈</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"recurments.jsp\">채용정보</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"companies.jsp\">기업소개</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"services.jsp\">커리어상담</a>\r\n");
      out.write("				</li>\r\n");
      out.write("\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 로그인 상태에 따라 다른 링크를 출력 -->\r\n");
      out.write("		");

		if (SessionUtil.checkLogin(request)) {
		
      out.write("\r\n");
      out.write("		<div id=\"login_text_last\" class=\"login_text Last\">\r\n");
      out.write("			<a href=\"select.do\">마이페이지</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"login_text\" class=\"login_text\">\r\n");
      out.write("			<a href=\"logout.do\">로그아웃</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		} else {
		
      out.write("\r\n");
      out.write("		<div class=\"login_text\">\r\n");
      out.write("			<a href=\"login.jsp\">로그인</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</nav>\r\n");
      out.write("	<!-- header section start-->\r\n");
      out.write("	");

	String userId = SessionUtil.getLoginId(request);

	if (userId != null) {
		MemberDAO dao = new MemberDAO();
		ArrayList<MemberDTO> userInfo = dao.MemberSelectById(userId);

		if (!userInfo.isEmpty()) {
			MemberDTO user = userInfo.get(0);
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"services_section\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h1 class=\"services_text\">나의 회원 정보</h1>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"services_section_2 layout_padding\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h1 class=\"companies_text\">마이페이지</h1>\r\n");
      out.write("			<div class=\"services_item \">\r\n");
      out.write("				<div class=\"row\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"form_group\">\r\n");
      out.write("		<form id=\"userInfoForm\" action=\"update.do\" method=\"post\">\r\n");
      out.write("			<input type=\"hidden\" id=\"id\" name=\"id\" value=\"");
      out.print(user.getId());
      out.write("\">\r\n");
      out.write("			<label for=\"id\">아이디:</label> <input type=\"text\" id=\"id\" name=\"id\"\r\n");
      out.write("				value=\"");
      out.print(user.getId());
      out.write("\" disabled><br> <label for=\"pw\">비밀번호:</label>\r\n");
      out.write("			<input type=\"text\" id=\"pw\" name=\"pw\" value=\"");
      out.print(user.getPw());
      out.write("\"\r\n");
      out.write("				disabled><br> <label for=\"name\">이름:</label> <input\r\n");
      out.write("				type=\"text\" id=\"name\" name=\"name\" value=\"");
      out.print(user.getName());
      out.write("\"\r\n");
      out.write("				disabled><br> <label for=\"hp\">폰번호:</label> <input\r\n");
      out.write("				type=\"text\" id=\"hp\" name=\"hp\" value=\"");
      out.print(user.getHp());
      out.write("\" disabled><br>\r\n");
      out.write("\r\n");
      out.write("			<label for=\"email\">이메일:</label> <input type=\"text\" id=\"email\"\r\n");
      out.write("				name=\"email\" value=\"");
      out.print(user.getEmail());
      out.write("\" disabled><br>\r\n");
      out.write("\r\n");
      out.write("			<input type=\"button\" value=\"수정\" onclick=\"enableEdit()\"> <input\r\n");
      out.write("				type=\"submit\" value=\"저장\" style=\"display: none;\"> <input\r\n");
      out.write("				type=\"button\" value=\"취소\" onclick=\"cancelEdit()\"\r\n");
      out.write("				style=\"display: none;\"> <br>\r\n");
      out.write("		</form>\r\n");
      out.write("		<div class=\"text-right\">\r\n");
      out.write("			<a href=\"javascript:void(0);\"\r\n");
      out.write("				onclick=\"confirmDelete('");
      out.print(user.getId());
      out.write("')\" class=\"btn btn-danger\">회원탈퇴</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- footer section start-->\r\n");
      out.write("	<div class=\"footer_section layout_padding\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h1 class=\"subscribr_text\">구직정보 알림받기</h1>\r\n");
      out.write("			<p class=\"lorem_text\">회원가입 없이도 구직정보를 받고싶으시다면 이메일을 입력해 주세요.</p>\r\n");
      out.write("			<div class=\"box_main_2\">\r\n");
      out.write("				<form action=\"guest.do\" method=\"post\" id=\"guestForm\">\r\n");
      out.write("					<input type=\"text\" class=\"email_bt_2\"\r\n");
      out.write("						placeholder=\"Enter Your Email\" name=\"guestEmail\" id=\"guestEmail\">\r\n");
      out.write("\r\n");
      out.write("					<input type=\"submit\" value=\"입력\" class=\"subscribe_bt_2\"\r\n");
      out.write("						onclick=\"guestAlert()\">\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- footer section end-->\r\n");
      out.write("	<!-- copyright section start-->\r\n");
      out.write("	<div class=\"copyright_section\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-md-6\">\r\n");
      out.write("					<p class=\"copyright_text\">\r\n");
      out.write("						Copyright 2024 All Right Reserved By AI TEAM 2.<a\r\n");
      out.write("							href=\"http://www.kb.or.kr/\">경북산업직업전문학교</a>\r\n");
      out.write("					</p>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-md-6\">\r\n");
      out.write("					<p class=\"cookies_text\"></p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- copyright section end-->\r\n");
      out.write("	<script>\r\n");
      out.write("             function confirmDelete(userId) {\r\n");
      out.write("                 var confirmResult = confirm(\"정말로 삭제하시겠습니까?\");\r\n");
      out.write("                 if (confirmResult) {\r\n");
      out.write("                     // 예를 눌렀을 경우 userId를 delete.do에 전달\r\n");
      out.write("                     window.location.href = \"delete.do?id=\" + userId;\r\n");
      out.write("                 }\r\n");
      out.write("             }\r\n");
      out.write("         </script>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("    function enableEdit() {\r\n");
      out.write("        // 아이디를 제외한 다른 입력란만 활성화\r\n");
      out.write("        document.getElementById(\"pw\").disabled = false;\r\n");
      out.write("        document.getElementById(\"name\").disabled = false;\r\n");
      out.write("        document.getElementById(\"hp\").disabled = false;\r\n");
      out.write("        document.getElementById(\"email\").disabled = false;\r\n");
      out.write("\r\n");
      out.write("        // \"수정\" 버튼 숨기고 \"저장\"과 \"취소\" 버튼 표시\r\n");
      out.write("        var editButton = document.querySelector('input[value=\"수정\"]');\r\n");
      out.write("        var saveButton = document.querySelector('input[value=\"저장\"]');\r\n");
      out.write("        var cancelButton = document.querySelector('input[value=\"취소\"]');\r\n");
      out.write("\r\n");
      out.write("        editButton.style.display = 'none';\r\n");
      out.write("        saveButton.style.display = 'inline';\r\n");
      out.write("        cancelButton.style.display = 'inline';\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function cancelEdit() {\r\n");
      out.write("        // 폼의 입력 상태를 초기화하고 disabled 상태로 돌아감\r\n");
      out.write("        document.getElementById(\"pw\").value = \"");
      out.print(user.getPw());
      out.write("\";\r\n");
      out.write("        document.getElementById(\"name\").value = \"");
      out.print(user.getName());
      out.write("\";\r\n");
      out.write("        document.getElementById(\"hp\").value = \"");
      out.print(user.getHp());
      out.write("\";\r\n");
      out.write("        document.getElementById(\"email\").value = \"");
      out.print(user.getEmail());
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("        // 모든 입력란을 다시 disabled 상태로 변경\r\n");
      out.write("        document.getElementById(\"pw\").disabled = true;\r\n");
      out.write("        document.getElementById(\"name\").disabled = true;\r\n");
      out.write("        document.getElementById(\"hp\").disabled = true;\r\n");
      out.write("        document.getElementById(\"email\").disabled = true;\r\n");
      out.write("\r\n");
      out.write("        // \"수정\" 버튼과 \"저장\", \"취소\" 버튼 순서대로 표시\r\n");
      out.write("        var editButton = document.querySelector('input[value=\"수정\"]');\r\n");
      out.write("        var saveButton = document.querySelector('input[value=\"저장\"]');\r\n");
      out.write("        var cancelButton = document.querySelector('input[value=\"취소\"]');\r\n");
      out.write("\r\n");
      out.write("        editButton.style.display = 'inline';\r\n");
      out.write("        saveButton.style.display = 'none';\r\n");
      out.write("        cancelButton.style.display = 'none';\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("	");

	}
	}
	
      out.write('\r');
      out.write('\n');
      out.write('	');

	// updateSuccess 파라미터가 true일 경우에만 알림창을 띄움
	String updateSuccess = request.getParameter("updateSuccess");
	if ("true".equals(updateSuccess)) {
	
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		alert(\"수정이 완료되었습니다.\");\r\n");
      out.write("	</script>\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("	<!-- 로그아웃 부분 -->\r\n");
      out.write("	<script>\r\n");
      out.write("		$(document).ready(function(){\r\n");
      out.write("		      $(\".fancybox\").fancybox({\r\n");
      out.write("		         openEffect: \"none\",\r\n");
      out.write("		         closeEffect: \"none\"\r\n");
      out.write("		         });\r\n");
      out.write("		      // 로그아웃 성공 시에만 alert 표시\r\n");
      out.write("		      var logoutSuccess = '");
      out.print( request.getParameter("logoutSuccess") );
      out.write("';\r\n");
      out.write("		      if (logoutSuccess === \"true\") {\r\n");
      out.write("		          alert(\"로그아웃되었습니다.\");\r\n");
      out.write("		      }\r\n");
      out.write("		      });\r\n");
      out.write("		        \r\n");
      out.write("		\r\n");
      out.write("		</script>\r\n");
      out.write("\r\n");
      out.write("	<script src=\"js/guestAlert.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("	 // 로그아웃 alert 띄우는 기능\r\n");
      out.write("	 document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("	    // 로그아웃 성공 시에만 alert 표시\r\n");
      out.write("	    var logoutSuccess = '");
      out.print( request.getParameter("logoutSuccess") );
      out.write("';\r\n");
      out.write("	    if (logoutSuccess === \"true\") {\r\n");
      out.write("	      alert(\"로그아웃되었습니다.\");\r\n");
      out.write("	    }\r\n");
      out.write("	  });\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
