/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-08 07:29:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.javalex.ex.Crawling.CompanyDTO;
import com.javalex.ex.Session.SessionUtil;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.List;
import java.util.ArrayList;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public final class recurments_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.OutputStream");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.javalex.ex.Crawling.CompanyDTO");
    _jspx_imports_classes.add("org.jsoup.nodes.Document");
    _jspx_imports_classes.add("org.jsoup.nodes.Element");
    _jspx_imports_classes.add("com.javalex.ex.Session.SessionUtil");
    _jspx_imports_classes.add("java.io.FileOutputStream");
    _jspx_imports_classes.add("java.io.IOException");
    _jspx_imports_classes.add("org.jsoup.Jsoup");
    _jspx_imports_classes.add("org.jsoup.select.Elements");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<!-- basic -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<!-- mobile metas -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=1\">\r\n");
      out.write("<!-- site metas -->\r\n");
      out.write("<title>직별 구인</title>\r\n");
      out.write("<meta name=\"keywords\" content=\"\">\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta name=\"author\" content=\"\">\r\n");
      out.write("<!-- bootstrap css -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("<!-- style css -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\">\r\n");
      out.write("<!-- Responsive-->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/responsive.css\">\r\n");
      out.write("<!-- fevicon -->\r\n");
      out.write("<link rel=\"icon\" href=\"images/fevicon.png\" type=\"image/gif\" />\r\n");
      out.write("<!-- Scrollbar Custom CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/jquery.mCustomScrollbar.min.css\">\r\n");
      out.write("<!-- Tweaks for older IEs-->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css\">\r\n");
      out.write("<!-- owl stylesheets -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/owl.carousel.min.css\">\r\n");
      out.write("<link rel=\"stylesoeet\" href=\"css/owl.theme.default.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.css\"\r\n");
      out.write("	media=\"screen\">\r\n");
      out.write("<style>\r\n");
      out.write("table {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	border-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" table, th, td {\r\n");
      out.write("	border: 1px solid #ddd;\r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("th, td {\r\n");
      out.write("	padding: 10px; /* 적절한 패딩 값으로 조절 */\r\n");
      out.write("	word-wrap: break-word; /* 글자가 셀 너비를 넘어갈 경우 줄 바꿈 처리 */\r\n");
      out.write("	max-width: 430px; /* 적절한 최대 너비 값으로 조절 */\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

// 이 코드는 JSP 페이지 상단에 위치해야 합니다.

// 세션이 없거나 로그인되어 있지 않으면 경고창을 띄우고 로그인 페이지로 이동합니다.
if(SessionUtil.checkLogin(request) == false) {
    // JavaScript를 사용하여 경고창을 표시하고 페이지를 이동합니다.

      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        alert(\"로그인이 필요한 서비스입니다.\");\r\n");
      out.write("        window.location.href = \"login.jsp\";\r\n");
      out.write("    </script>\r\n");

    // 이후의 코드는 실행되지 않습니다.
    return;
}

      out.write("\r\n");
      out.write("	<!-- header section start-->\r\n");
      out.write("	<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("		<a class=\"logo\" href=\"index.jsp\"><img src=\"images/logooriginal.png\"></a>\r\n");
      out.write("		<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n");
      out.write("			data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\r\n");
      out.write("			aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("			<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("		</button>\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("			<ul class=\"navbar-nav\">\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"index.jsp\">홈</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"recurments.jsp\">채용정보</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"companies.jsp\">기업소개</a>\r\n");
      out.write("				</li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"services.jsp\">커리어상담</a>\r\n");
      out.write("				</li>\r\n");
      out.write("\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 로그인 상태에 따라 다른 링크를 출력 -->\r\n");
      out.write("		");

		if (SessionUtil.checkLogin(request)) {
		
      out.write("\r\n");
      out.write("		<div id=\"login_text_last\" class=\"login_text Last\">\r\n");
      out.write("			<a href=\"select.do\">마이페이지</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"login_text\" class=\"login_text\">\r\n");
      out.write("			<a href=\"logout.do\">로그아웃</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		} else {
		
      out.write("\r\n");
      out.write("		<div class=\"login_text\">\r\n");
      out.write("			<a href=\"login.jsp\">로그인</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		}
		
      out.write("\r\n");
      out.write("	</nav>\r\n");
      out.write("	<!-- header  section end-->\r\n");
      out.write("	<!-- Recurments  section start-->\r\n");
      out.write("	<div class=\"services_section\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h1 class=\"services_text\">채용 정보 리스트</h1>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"services_section_2 layout_padding\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h1 class=\"companies_text\">채용 정보</h1>\r\n");
      out.write("			<div class=\"services_item \">\r\n");
      out.write("				<div class=\"row\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!--  서비스및 판매업 -->\r\n");
      out.write("	<div class=\"Recurments_section_2\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"product_section\">\r\n");
      out.write("				<div class=\"row padding_top_0\">\r\n");
      out.write("					<div class=\"col-sm-2\">\r\n");
      out.write("						<div class=\"one_text\">\r\n");
      out.write("							<a href=\"#\">01</a>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"col-sm-8\">\r\n");
      out.write("						<h1 class=\"software_text\">서비스 및 판매업</h1>\r\n");
      out.write("						<p class=\"lorem_ipsum_text\">주로 고객에게 서비스를 제공하거나, 판매를 하는 일</p>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- <div class=\"col-sm-2\"> -->\r\n");
      out.write("					<button id=\"toggleRecruitInfoButton\" class=\"apply_now\"\r\n");
      out.write("						onclick=\"showRecruitInfo()\">채용정보보기</button>\r\n");
      out.write("\r\n");
      out.write("					<!-- 동적으로 추가될 채용정보 테이블 -->\r\n");
      out.write("					<div id=\"recruitInfoTable\"></div>\r\n");
      out.write("\r\n");
      out.write("					<!-- </div> -->\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- 제조 및 건설업 -->\r\n");
      out.write("		<div class=\"Recurments_section_2\">\r\n");
      out.write("			<div class=\"container\">\r\n");
      out.write("				<div class=\"product_section\">\r\n");
      out.write("					<div class=\"row padding_top_0\">\r\n");
      out.write("						<div class=\"col-sm-2\">\r\n");
      out.write("							<div class=\"one_text\">\r\n");
      out.write("								<a href=\"#\">02</a>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-sm-8\">\r\n");
      out.write("							<h1 class=\"software_text\">제조 및 건설업</h1>\r\n");
      out.write("							<p class=\"lorem_ipsum_text\">공정,제조 및 건설을 하는 일</p>\r\n");
      out.write("						</div>\r\n");
      out.write("						<!-- <div class=\"col-sm-2\"> -->\r\n");
      out.write("						<button id=\"toggleRecruitInfoButton2\" class=\"apply_now\"\r\n");
      out.write("							onclick=\"showRecruitInfo2()\">채용정보보기</button>\r\n");
      out.write("\r\n");
      out.write("						<!-- 동적으로 추가될 채용정보 테이블 -->\r\n");
      out.write("						<div id=\"recruitInfoTable2\"></div>\r\n");
      out.write("						<!-- 	</div> -->\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 사무 및 전문직 -->\r\n");
      out.write("			<div class=\"Recurments_section_2\">\r\n");
      out.write("				<div class=\"container\">\r\n");
      out.write("					<div class=\"product_section\">\r\n");
      out.write("						<div class=\"row padding_top_0\">\r\n");
      out.write("							<div class=\"col-sm-2\">\r\n");
      out.write("								<div class=\"one_text\">\r\n");
      out.write("									<a href=\"#\">03</a>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"col-sm-8\">\r\n");
      out.write("								<h1 class=\"software_text\">사무 및 전문직</h1>\r\n");
      out.write("								<p class=\"lorem_ipsum_text\">행정,사무 및 전문기술을 가지고 하는 일</p>\r\n");
      out.write("							</div>\r\n");
      out.write("							<!-- <div class=\"col-sm-2\"> -->\r\n");
      out.write("							<button id=\"toggleRecruitInfoButton3\" class=\"apply_now\"\r\n");
      out.write("								onclick=\"showRecruitInfo3()\">채용정보보기</button>\r\n");
      out.write("\r\n");
      out.write("							<!-- 동적으로 추가될 채용정보 테이블 -->\r\n");
      out.write("							<div id=\"recruitInfoTable3\"></div>\r\n");
      out.write("							<!-- </div> -->\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<!-- 교육 및 의료업 -->\r\n");
      out.write("				<div class=\"Recurments_section_2\">\r\n");
      out.write("					<div class=\"container\">\r\n");
      out.write("						<div class=\"product_section\">\r\n");
      out.write("							<div class=\"row padding_top_0\">\r\n");
      out.write("								<div class=\"col-sm-2\">\r\n");
      out.write("									<div class=\"one_text\">\r\n");
      out.write("										<a href=\"#\">04</a>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"col-sm-8\">\r\n");
      out.write("									<h1 class=\"software_text\">교육 및 의료업</h1>\r\n");
      out.write("									<p class=\"lorem_ipsum_text\">사람을 교육 및 의료서비스를 제공하는 일</p>\r\n");
      out.write("								</div>\r\n");
      out.write("								<!-- 	<div class=\"col-sm-2\"> -->\r\n");
      out.write("								<button id=\"toggleRecruitInfoButton4\" class=\"apply_now\" onclick=\"showRecruitInfo4()\">채용정보보기</button>\r\n");
      out.write("								<!-- 동적으로 추가될 채용정보 테이블 -->\r\n");
      out.write("								<div id=\"recruitInfoTable4\"></div>\r\n");
      out.write("								<!-- 	</div> -->\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- Recurments  section end-->\r\n");
      out.write("					<!-- footer section start-->\r\n");
      out.write("					<div class=\"footer_section layout_padding\">\r\n");
      out.write("						<div class=\"container\">\r\n");
      out.write("							<h1 class=\"subscribr_text\">구직정보 알림받기</h1>\r\n");
      out.write("							<p class=\"lorem_text\">회원가입 없이도 구직정보를 받고싶으시다면 이메일을 입력해 주세요.</p>\r\n");
      out.write("							<div class=\"box_main_2\">\r\n");
      out.write("								<form action=\"guest.do\" method=\"post\" id=\"guestForm\">\r\n");
      out.write("									<input type=\"text\" class=\"email_bt_2\"\r\n");
      out.write("										placeholder=\"Enter Your Email\" name=\"guestEmail\"\r\n");
      out.write("										id=\"guestEmail\"> <input type=\"submit\" value=\"입력\"\r\n");
      out.write("										class=\"subscribe_bt_2\" onclick=\"guestAlert()\">\r\n");
      out.write("								</form>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- footer section end-->\r\n");
      out.write("					<!-- copyright section start-->\r\n");
      out.write("					<div class=\"copyright_section\">\r\n");
      out.write("						<div class=\"container\">\r\n");
      out.write("							<div class=\"row\">\r\n");
      out.write("								<div class=\"col-md-6\">\r\n");
      out.write("									<p class=\"copyright_text\">\r\n");
      out.write("										Copyright 2024 All Right Reserved By AI TEAM 2.<a\r\n");
      out.write("											href=\"http://www.kb.or.kr/\">경북산업직업전문학교</a>\r\n");
      out.write("									</p>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"col-md-6\">\r\n");
      out.write("									<p class=\"cookies_text\"></p>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- copyright section end-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<!-- Javascript files-->\r\n");
      out.write("					<script src=\"js/jquery.min.js\"></script>\r\n");
      out.write("					<script src=\"js/popper.min.js\"></script>\r\n");
      out.write("					<script src=\"js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("					<script src=\"js/jquery-3.0.0.min.js\"></script>\r\n");
      out.write("					<script src=\"js/plugin.js\"></script>\r\n");
      out.write("					<!-- sidebar -->\r\n");
      out.write("					<script src=\"js/jquery.mCustomScrollbar.concat.min.js\"></script>\r\n");
      out.write("					<script src=\"js/custom.js\"></script>\r\n");
      out.write("					<!-- javascript -->\r\n");
      out.write("					<script src=\"js/owl.carousel.js\"></script>\r\n");
      out.write("					<script\r\n");
      out.write("						src=\"https:cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("					<script src=\"js/guestAlert.js\"></script>\r\n");
      out.write("					<script>\r\n");
      out.write("		$(document).ready(function(){\r\n");
      out.write("		      $(\".fancybox\").fancybox({\r\n");
      out.write("		         openEffect: \"none\",\r\n");
      out.write("		         closeEffect: \"none\"\r\n");
      out.write("		         });\r\n");
      out.write("		      // 로그아웃 성공 시에만 alert 표시\r\n");
      out.write("		      var logoutSuccess = '");
      out.print(request.getParameter("logoutSuccess"));
      out.write("';\r\n");
      out.write("		      if (logoutSuccess === \"true\") {\r\n");
      out.write("		          alert(\"로그아웃되었습니다.\");\r\n");
      out.write("		      }\r\n");
      out.write("		      });\r\n");
      out.write("</script>\r\n");
      out.write("					<!-- 서비스 크롤링 -->\r\n");
      out.write("					");

					// 크롤링할 URL들
					String url = "https://www.saramin.co.kr/zf_user/search?search_area=main&search_done=y&search_optional_item=n&loc_mcd=104000%2C111000&cat_kewd=647%2C1401%2C1635%2C401%2C634%2C938%2C655%2C660%2C706%2C713%2C732%2C1263%2C1230";

					// JSoup을 사용하여 웹 페이지 가져오기
					Document doc = Jsoup.connect(url).get();

					// 크롤링한 정보를 담을 리스트 생성
					List<CompanyDTO> companyDTO = new ArrayList<>();

					// 제목과 날짜를 담을 리스트 생성
					List<String> titles = new ArrayList<>(); // 공고내용
					List<String> company = new ArrayList<>(); // 회사이름
					List<String> dates = new ArrayList<>(); // 공고종료일자
					List<String> condition = new ArrayList<>(); // 고용형태(정규직 등)
					List<String> update = new ArrayList<>(); // 공고수정일
					List<String> companyurl = new ArrayList<>(); // 주소?

					// 채용 정보 추출
					Elements jobList = doc.select("div.item_recruit");

					for (Element job : jobList) {

						String title = job.select("h2.job_tit a").text();
						String date = job.select("div.job_date span.date").text();
						String Company = job.select("div.area_corp strong.corp_name a").text();
						String conditionText = job.select("div.job_condition span").text();
						String updateDate = job.select("div.job_sector span.job_day").text();
						String companyUrl = "http://www.saramin.co.kr" + job.select("div.area_corp_info a.btn_info").attr("href");

						titles.add(title);
						dates.add(date);
						company.add(Company);
						condition.add(conditionText);
						update.add(updateDate);
						companyurl.add(companyUrl);

						// 크롤링한 정보를 companyDTO 리스트에 추가
						companyDTO.add(new CompanyDTO(title, Company, date, conditionText, updateDate, companyUrl));
					}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<script>\r\n");
      out.write("					\r\n");
      out.write("    function showRecruitInfo() {\r\n");
      out.write("        // 채용 정보를 담고 있는 JavaScript 배열\r\n");
      out.write("        var companyDTO = [\r\n");
      out.write("               ");
      out.write("\r\n");
      out.write("            ");
for (int i = 0; i < titles.size(); i++) {
      out.write("\r\n");
      out.write("            {\r\n");
      out.write("                title: \"");
      out.print(titles.get(i));
      out.write("\",\r\n");
      out.write("                company: \"");
      out.print(company.get(i));
      out.write("\",\r\n");
      out.write("                date: \"");
      out.print(dates.get(i));
      out.write("\",\r\n");
      out.write("                condition: \"");
      out.print(condition.get(i));
      out.write("\",\r\n");
      out.write("                update: \"");
      out.print(update.get(i));
      out.write("\",\r\n");
      out.write("                companyurl: \"");
      out.print(companyurl.get(i));
      out.write("\"\r\n");
      out.write("            },\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("        ];\r\n");
      out.write("\r\n");
      out.write("        // 테이블 생성 및 채용 정보 추가\r\n");
      out.write("        var tableHtml = '<table id=\"table\" border=\"1\"><tr><th>제목</th><th>회사</th><th>종료일자</th><th>고용형태</th><th>수정일</th><th>링크</th></tr>';\r\n");
      out.write("        \r\n");
      out.write("        for (var i = 0; i < companyDTO.length; i++) {\r\n");
      out.write("        	if(companyDTO[i].title!=\"\" && companyDTO[i].company!=\"\" && companyDTO[i].date!=\"\" && companyDTO[i].condition!=\"\" && companyDTO[i].update!=\"\" && companyDTO[i].companyurl!=\"\"){\r\n");
      out.write("            tableHtml += '<tr>';\r\n");
      out.write("            tableHtml += '<td>' + companyDTO[i].title + '</td>';\r\n");
      out.write("            tableHtml += '<td>' + companyDTO[i].company + '</td>';\r\n");
      out.write("            tableHtml += '<td>' + companyDTO[i].date + '</td>';\r\n");
      out.write("            tableHtml += '<td>' + companyDTO[i].condition + '</td>';\r\n");
      out.write("            tableHtml += '<td>' + companyDTO[i].update + '</td>';\r\n");
      out.write("            tableHtml += '<td><a href=\"' + companyDTO[i].companyurl + '\" target=\"_blank\">링크</a></td>';\r\n");
      out.write("            tableHtml += '</tr>';\r\n");
      out.write("        	}\r\n");
      out.write("        }\r\n");
      out.write("        tableHtml += '</table>';\r\n");
      out.write("\r\n");
      out.write("        // 동적으로 추가된 테이블을 보여줄 위치에 삽입\r\n");
      out.write("        $('#recruitInfoTable').html(tableHtml);\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("					<!-- 제조 및 건설업 크롤링 -->\r\n");
      out.write("					");

					// 크롤링할 URL들
					String url2 = "https://www.saramin.co.kr/zf_user/search?loc_mcd=104000%2C111000&cat_mcls=22&company_cd=0%2C1%2C2%2C3%2C4%2C5%2C6%2C7%2C9%2C10&panel_type=&search_optional_item=y&search_done=y&panel_count=y&preview=y";

					// JSoup을 사용하여 웹 페이지 가져오기
					Document doc2 = Jsoup.connect(url2).get();

					// 크롤링한 정보를 담을 리스트 생성
					List<CompanyDTO> companyDTO2 = new ArrayList<>();

					// 제목과 날짜를 담을 리스트 생성
					List<String> titles2 = new ArrayList<>(); // 공고내용
					List<String> company2 = new ArrayList<>(); // 회사이름
					List<String> dates2 = new ArrayList<>(); // 공고종료일자
					List<String> condition2 = new ArrayList<>(); // 고용형태(정규직 등)
					List<String> update2 = new ArrayList<>(); // 공고수정일
					List<String> companyurl2 = new ArrayList<>(); // 주소?

					// 채용 정보 추출
					Elements jobList2 = doc2.select("div.item_recruit");

					for (Element job2 : jobList2) {
						String title = job2.select("h2.job_tit a").text();
						String date = job2.select("div.job_date span.date").text();
						String Company = job2.select("div.area_corp strong.corp_name a").text();
						String conditionText = job2.select("div.job_condition span").text();
						String updateDate = job2.select("div.job_sector span.job_day").text();
						String companyUrl = "http://www.saramin.co.kr" + job2.select("div.area_corp_info a.btn_info").attr("href");

						titles2.add(title);
						dates2.add(date);
						company2.add(Company);
						condition2.add(conditionText);
						update2.add(updateDate);
						companyurl2.add(companyUrl);

						// 크롤링한 정보를 companyDTO 리스트에 추가
						companyDTO2.add(new CompanyDTO(title, Company, date, conditionText, updateDate, companyUrl));
					}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<script>\r\n");
      out.write("    function showRecruitInfo2() {\r\n");
      out.write("        // 채용 정보를 담고 있는 JavaScript 배열\r\n");
      out.write("        var companyDTO2 = [\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            ");
for (int i = 0; i < titles2.size(); i++) {
      out.write("\r\n");
      out.write("                {\r\n");
      out.write("                    title: \"");
      out.print(titles2.get(i));
      out.write("\",\r\n");
      out.write("                    company: \"");
      out.print(company2.get(i));
      out.write("\",\r\n");
      out.write("                    date: \"");
      out.print(dates2.get(i));
      out.write("\",\r\n");
      out.write("                    condition: \"");
      out.print(condition2.get(i));
      out.write("\",\r\n");
      out.write("                    update: \"");
      out.print(update2.get(i));
      out.write("\",\r\n");
      out.write("                    companyurl: \"");
      out.print(companyurl2.get(i));
      out.write("\"\r\n");
      out.write("                },\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("        ];\r\n");
      out.write("\r\n");
      out.write("        // 테이블 생성 및 채용 정보 추가\r\n");
      out.write("        var tableHtml2 = '<table border=\"1\"><tr><th>제목</th><th>회사</th><th>종료일자</th><th>고용형태</th><th>수정일</th><th>링크</th></tr>';\r\n");
      out.write("        for (var i = 0; i < companyDTO2.length; i++) {\r\n");
      out.write("        	if(companyDTO2[i].title!=\"\" && companyDTO2[i].company!=\"\" && companyDTO2[i].date!=\"\" && companyDTO2[i].condition!=\"\" && companyDTO2[i].update!=\"\" && companyDTO2[i].companyurl!=\"\"){\r\n");
      out.write("            tableHtml2 += '<tr>';\r\n");
      out.write("            tableHtml2 += '<td>' + companyDTO2[i].title + '</td>';\r\n");
      out.write("            tableHtml2 += '<td>' + companyDTO2[i].company + '</td>';\r\n");
      out.write("            tableHtml2 += '<td>' + companyDTO2[i].date + '</td>';\r\n");
      out.write("            tableHtml2 += '<td>' + companyDTO2[i].condition + '</td>';\r\n");
      out.write("            tableHtml2 += '<td>' + companyDTO2[i].update + '</td>';\r\n");
      out.write("            tableHtml2 += '<td><a href=\"' + companyDTO2[i].companyurl + '\" target=\"_blank\">링크</a></td>';\r\n");
      out.write("            tableHtml2 += '</tr>';\r\n");
      out.write("        	}\r\n");
      out.write("        }\r\n");
      out.write("        tableHtml2 += '</table>';\r\n");
      out.write("\r\n");
      out.write("        // 동적으로 추가된 테이블을 보여줄 위치에 삽입\r\n");
      out.write("        $('#recruitInfoTable2').html(tableHtml2);\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("					<!-- 사무 및 전문직 크롤링 -->\r\n");
      out.write("					");

					// 크롤링할 URL들
					String url3 = "https://www.saramin.co.kr/zf_user/search?loc_mcd=104000%2C111000&company_cd=0%2C1%2C2%2C3%2C4%2C5%2C6%2C7%2C9%2C10&cat_mcls=4%2C3&panel_type=&search_optional_item=y&search_done=y&panel_count=y&preview=y";

					// JSoup을 사용하여 웹 페이지 가져오기
					Document doc3 = Jsoup.connect(url3).get();

					// 크롤링한 정보를 담을 리스트 생성
					List<CompanyDTO> companyDTO3 = new ArrayList<>();

					// 제목과 날짜를 담을 리스트 생성
					List<String> titles3 = new ArrayList<>(); // 공고내용
					List<String> company3 = new ArrayList<>(); // 회사이름
					List<String> dates3 = new ArrayList<>(); // 공고종료일자
					List<String> condition3 = new ArrayList<>(); // 고용형태(정규직 등)
					List<String> update3 = new ArrayList<>(); // 공고수정일
					List<String> companyurl3 = new ArrayList<>(); // 주소?

					// 채용 정보 추출
					Elements jobList3 = doc3.select("div.item_recruit");

					for (Element job3 : jobList3) {
						String title = job3.select("h2.job_tit a").text();
						String date = job3.select("div.job_date span.date").text();
						String Company = job3.select("div.area_corp strong.corp_name a").text();
						String conditionText = job3.select("div.job_condition span").text();
						String updateDate = job3.select("div.job_sector span.job_day").text();
						String companyUrl = "http://www.saramin.co.kr" + job3.select("div.area_corp_info a.btn_info").attr("href");

						titles3.add(title);
						dates3.add(date);
						company3.add(Company);
						condition3.add(conditionText);
						update3.add(updateDate);
						companyurl3.add(companyUrl);

						// 크롤링한 정보를 companyDTO 리스트에 추가
						companyDTO3.add(new CompanyDTO(title, Company, date, conditionText, updateDate, companyUrl));
					}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<script>\r\n");
      out.write("    function showRecruitInfo3() {\r\n");
      out.write("        // 채용 정보를 담고 있는 JavaScript 배열\r\n");
      out.write("        var companyDTO3 = [\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            ");
for (int i = 0; i < titles3.size(); i++) {
      out.write("\r\n");
      out.write("                {\r\n");
      out.write("                    title: \"");
      out.print(titles3.get(i));
      out.write("\",\r\n");
      out.write("                    company: \"");
      out.print(company3.get(i));
      out.write("\",\r\n");
      out.write("                    date: \"");
      out.print(dates3.get(i));
      out.write("\",\r\n");
      out.write("                    condition: \"");
      out.print(condition3.get(i));
      out.write("\",\r\n");
      out.write("                    update: \"");
      out.print(update3.get(i));
      out.write("\",\r\n");
      out.write("                    companyurl: \"");
      out.print(companyurl3.get(i));
      out.write("\"\r\n");
      out.write("                },\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("        ];\r\n");
      out.write("\r\n");
      out.write("        // 테이블 생성 및 채용 정보 추가\r\n");
      out.write("        var tableHtml3 = '<table border=\"1\"><tr><th>제목</th><th>회사</th><th>종료일자</th><th>고용형태</th><th>수정일</th><th>링크</th></tr>';\r\n");
      out.write("        for (var i = 0; i < companyDTO3.length; i++) {\r\n");
      out.write("        	if(companyDTO3[i].title!=\"\" && companyDTO3[i].company!=\"\" && companyDTO3[i].date!=\"\" && companyDTO3[i].condition!=\"\" && companyDTO3[i].update!=\"\" && companyDTO3[i].companyurl!=\"\"){\r\n");
      out.write("            tableHtml3 += '<tr>';\r\n");
      out.write("            tableHtml3 += '<td>' + companyDTO3[i].title + '</td>';\r\n");
      out.write("            tableHtml3 += '<td>' + companyDTO3[i].company + '</td>';\r\n");
      out.write("            tableHtml3 += '<td>' + companyDTO3[i].date + '</td>';\r\n");
      out.write("            tableHtml3 += '<td>' + companyDTO3[i].condition + '</td>';\r\n");
      out.write("            tableHtml3 += '<td>' + companyDTO3[i].update + '</td>';\r\n");
      out.write("            tableHtml3 += '<td><a href=\"' + companyDTO3[i].companyurl + '\" target=\"_blank\">링크</a></td>';\r\n");
      out.write("            tableHtml3 += '</tr>';\r\n");
      out.write("        	}\r\n");
      out.write("        }\r\n");
      out.write("        tableHtml3 += '</table>';\r\n");
      out.write("\r\n");
      out.write("        // 동적으로 추가된 테이블을 보여줄 위치에 삽입\r\n");
      out.write("        $('#recruitInfoTable3').html(tableHtml3);\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<!-- 교욱 및 의료 크롤링 -->\r\n");
      out.write("					");

					// 크롤링할 URL들
					String url4 = "https://www.saramin.co.kr/zf_user/search?loc_mcd=104000%2C111000&company_cd=0%2C1%2C2%2C3%2C4%2C5%2C6%2C7%2C9%2C10&cat_mcls=6%2C19&panel_type=&search_optional_item=y&search_done=y&panel_count=y&preview=y";

					// JSoup을 사용하여 웹 페이지 가져오기
					Document doc4 = Jsoup.connect(url4).get();

					// 크롤링한 정보를 담을 리스트 생성
					List<CompanyDTO> companyDTO4 = new ArrayList<>();

					// 제목과 날짜를 담을 리스트 생성
					List<String> titles4 = new ArrayList<>(); // 공고내용
					List<String> company4 = new ArrayList<>(); // 회사이름
					List<String> dates4 = new ArrayList<>(); // 공고종료일자
					List<String> condition4 = new ArrayList<>(); // 고용형태(정규직 등)
					List<String> update4 = new ArrayList<>(); // 공고수정일
					List<String> companyurl4 = new ArrayList<>(); // 주소?

					// 채용 정보 추출
					Elements jobList4 = doc4.select("div.item_recruit");

					for (Element job4 : jobList4) {
						String title = job4.select("h2.job_tit a").text();
						String date = job4.select("div.job_date span.date").text();
						String Company = job4.select("div.area_corp strong.corp_name a").text();
						String conditionText = job4.select("div.job_condition span").text();
						String updateDate = job4.select("div.job_sector span.job_day").text();
						String companyUrl = "http://www.saramin.co.kr" + job4.select("div.area_corp_info a.btn_info").attr("href");

						titles4.add(title);
						dates4.add(date);
						company4.add(Company);
						condition4.add(conditionText);
						update4.add(updateDate);
						companyurl4.add(companyUrl);

						// 크롤링한 정보를 companyDTO 리스트에 추가
						companyDTO4.add(new CompanyDTO(title, Company, date, conditionText, updateDate, companyUrl));
					}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<script>\r\n");
      out.write("    function showRecruitInfo4() {\r\n");
      out.write("        // 채용 정보를 담고 있는 JavaScript 배열\r\n");
      out.write("        var companyDTO4 = [\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            ");
for (int i = 0; i < titles4.size(); i++) {
      out.write("\r\n");
      out.write("                {\r\n");
      out.write("                    title: \"");
      out.print(titles4.get(i));
      out.write("\",\r\n");
      out.write("                    company: \"");
      out.print(company4.get(i));
      out.write("\",\r\n");
      out.write("                    date: \"");
      out.print(dates4.get(i));
      out.write("\",\r\n");
      out.write("                    condition: \"");
      out.print(condition4.get(i));
      out.write("\",\r\n");
      out.write("                    update: \"");
      out.print(update4.get(i));
      out.write("\",\r\n");
      out.write("                    companyurl: \"");
      out.print(companyurl4.get(i));
      out.write("\"\r\n");
      out.write("                },\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("        ];\r\n");
      out.write("\r\n");
      out.write("        // 테이블 생성 및 채용 정보 추가\r\n");
      out.write("        var tableHtml4 = '<table border=\"1\"><tr><th>제목</th><th>회사</th><th>종료일자</th><th>고용형태</th><th>수정일</th><th>링크</th></tr>';\r\n");
      out.write("        for (var i = 0; i < companyDTO4.length; i++) {\r\n");
      out.write("        	if(companyDTO4[i].title!=\"\" && companyDTO4[i].company!=\"\" && companyDTO4[i].date!=\"\" && companyDTO4[i].condition!=\"\" && companyDTO4[i].update!=\"\" && companyDTO4[i].companyurl!=\"\"){\r\n");
      out.write("            tableHtml4 += '<tr>';\r\n");
      out.write("            tableHtml4 += '<td>' + companyDTO4[i].title + '</td>';\r\n");
      out.write("            tableHtml4 += '<td>' + companyDTO4[i].company + '</td>';\r\n");
      out.write("            tableHtml4 += '<td>' + companyDTO4[i].date + '</td>';\r\n");
      out.write("            tableHtml4 += '<td>' + companyDTO4[i].condition + '</td>';\r\n");
      out.write("            tableHtml4 += '<td>' + companyDTO4[i].update + '</td>';\r\n");
      out.write("            tableHtml4 += '<td><a href=\"' + companyDTO4[i].companyurl + '\" target=\"_blank\">링크</a></td>';\r\n");
      out.write("            tableHtml4 += '</tr>';\r\n");
      out.write("        	}\r\n");
      out.write("        }\r\n");
      out.write("        tableHtml4 += '</table>';\r\n");
      out.write("\r\n");
      out.write("        // 동적으로 추가된 테이블을 보여줄 위치에 삽입\r\n");
      out.write("        $('#recruitInfoTable4').html(tableHtml4);\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("    // 첫 번째 버튼 클릭 시 테이블 토글\r\n");
      out.write("    $('#toggleRecruitInfoButton').click(function() {\r\n");
      out.write("        $('#recruitInfoTable').slideToggle(4000); \r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 두 번째 버튼 클릭 시 테이블 토글\r\n");
      out.write("    $('#toggleRecruitInfoButton2').click(function() {\r\n");
      out.write("        $('#recruitInfoTable2').slideToggle(4000);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 세 번째 버튼 클릭 시 테이블 토글\r\n");
      out.write("    $('#toggleRecruitInfoButton3').click(function() {\r\n");
      out.write("        $('#recruitInfoTable3').slideToggle(4000);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 네 번째 버튼 클릭 시 테이블 토글\r\n");
      out.write("    $('#toggleRecruitInfoButton4').click(function() {\r\n");
      out.write("        $('#recruitInfoTable4').slideToggle(4000);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 초기에 테이블 숨기기\r\n");
      out.write("    $('#recruitInfoTable').hide();\r\n");
      out.write("    $('#recruitInfoTable2').hide();\r\n");
      out.write("    $('#recruitInfoTable3').hide();\r\n");
      out.write("    $('#recruitInfoTable4').hide();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
