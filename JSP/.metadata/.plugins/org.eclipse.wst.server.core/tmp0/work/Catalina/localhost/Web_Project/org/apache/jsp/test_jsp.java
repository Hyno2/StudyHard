/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-05 06:31:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.ArrayList;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.OutputStream");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.jsoup.nodes.Document");
    _jspx_imports_classes.add("org.jsoup.nodes.Element");
    _jspx_imports_classes.add("java.io.FileOutputStream");
    _jspx_imports_classes.add("java.io.IOException");
    _jspx_imports_classes.add("org.jsoup.Jsoup");
    _jspx_imports_classes.add("org.jsoup.select.Elements");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>채용정보 크롤링 예제</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h1>채용정보 크롤링 결과</h1>\r\n");
      out.write("\r\n");
      out.write("    ");

        // 크롤링할 URL
        String url = "https://www.saramin.co.kr/zf_user/search?company_cd=0%2C1%2C2%2C3%2C4%2C5%2C6%2C7%2C9%2C10&loc_mcd=104000%2C111000&panel_type=&search_optional_item=y&search_done=y&panel_count=y&preview=y";

        // JSoup을 사용하여 웹 페이지 가져오기
        Document doc = Jsoup.connect(url).get();
		
        // 제목과 날짜를 담을 리스트 생성
        List<String> titles = new ArrayList<>();    // 공고내용
        List<String> company = new ArrayList<> ();    // 회사이름
        List<String> dates = new ArrayList<>();    // 공고종료일자
        List<String> condition = new ArrayList<>(); // 고용형태(정규직 등)
        List<String> update = new ArrayList<>(); // 공고수정일
        List<String> companyurl = new ArrayList<>(); // 주소?

        // 채용 정보 추출
        Elements jobList = doc.select("div.item_recruit");
       
        for (Element job : jobList) {
            String title = job.select("h2.job_tit a").text();
            String date = job.select("div.job_date span.date").text();
            String Company = job.select("div.area_corp strong.corp_name a").text();
            String conditionText = job.select("div.job_condition span").text();
            String updateDate = job.select("div.job_sector span.job_day").text();
            String companyUrl = "http://www.saramin.co.kr"+job.select("div.area_corp_info a.btn_info").attr("href"); 

            titles.add(title);
            dates.add(date);
            company.add(Company);
            condition.add(conditionText);
            update.add(updateDate);
            companyurl.add(companyUrl);
        }
    
      out.write("\r\n");
      out.write("    <table border=\"1\">\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th>번호</th>\r\n");
      out.write("        <th>제목</th>\r\n");
      out.write("        <th>회사</th>\r\n");
      out.write("        <th>마감일</th>\r\n");
      out.write("        <th>고용형태</th>\r\n");
      out.write("        <th>수정일</th>\r\n");
      out.write("        <th>기업URL</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("\r\n");
      out.write("    ");
 for (int i = 0; i < titles.size(); i++) { 
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>");
      out.print( i + 1 );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( titles.get(i) );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( company.get(i) );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( dates.get(i) );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( condition.get(i) );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( update.get(i) );
      out.write("</td>\r\n");
      out.write("            <td><a href=\"");
      out.print( companyurl.get(i) );
      out.write("\">상세 보기</a></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
